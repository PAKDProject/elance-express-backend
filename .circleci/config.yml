version: 2
defaults:
  working_directory: ~/repo
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          name: Restoring cache
          key: npm-dependency-cache
      - run:
          name: Install node_modules
          command: 'sudo npm install'
      - save_cache:
          key: npm-dependency-cache
          paths:
            - node_modules
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          name: Restoring npm modules
          key: npm-dependency-cache
      - run:
          name: Run test-dev
          command: 'sudo npm run test:dev'
  transpile:
      docker:
        - image: circleci/node:10
      steps:
        - checkout
        - restore_cache:
            name: Restoring npm modules
            key: npm-dependency-cache
        - run:
            name: Run typescript build
            command: 'sudo npm run build'
        - persist_to_workspace:
            root: ./
            paths:
              - dist
              - config
              - package.json
              - package-lock.json
  merge_to_master:
    docker:
      - image: circleci/node:10
    steps:
      - run:
          name: Update git
          command: sudo apt install git
      - run:
          name: Add github as known_host
          command: |
            if [[ ! -d ~/.ssh ]]; then
              mkdir ~/.ssh
            fi
            if [[ ! -f ~/.ssh/known_hosts ]]; then
              touch ~/.ssh/known_hosts
            fi
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone master branch
          command: git clone git@github.com/pakdproject/linkedout-backend.git backend
      - attach_workspace:
          at: ./backend
      - run:
          name: Add git config
          command: cd backend && git config --global user.email "ali9427@windowslive.com" && git config --global user.name "alanj1998"
      - run:
          name: Add changed files
          command: cd backend && git add .
      # - run:
      #     name: Ignore all unecessary files
      #     command: |
      #       for file in *; do
      #         if [[ $file != "dist" && $file != "config" && $file != "package.json" ]]; then
      #           git reset $file
      #         fi
      #       done
      # - run:
      #     name: Add changes to commit
      #     command: git add dist -f && git add package.json && git add package-lock.json
      - run: 
          name: Commit fixed changes
          command: cd backend && git commit -m "merged from dev"
      - run: 
          name: Push changes
          command: cd backend && git push origin master
              
workflows:
  version: 2
  build_and_test_dev:
    jobs:
      - build
      - test:
          requires:
            - build
      - transpile:
          requires:
            - test
      - merge_to_master:
          requires:
            - transpile