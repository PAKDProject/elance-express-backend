version: 2
defaults:
  working_directory: ~/repo
jobs:
  build:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          name: Restoring cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node_modules
          command: 'sudo npm install'
      - persist_to_workspace:
          root: ./
          paths:
            - .
  test:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Run test-dev
          command: 'sudo npm run test:dev'
      - persist_to_workspace:
          root: ./
          paths:
            - .
  transpile:
      docker:
        - image: circleci/node:10
      steps:
        - attach_workspace:
            at: ./
        - run:
            name: Run typescript build
            command: 'sudo npm run build'
        - persist_to_workspace:
            root: ./
            paths:
              - dist
              - "package.json"
              - "package-lock.json"
              - .git
  merge_to_master:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ./
      - run: 
          name: debugging
          command: ls -lt && cd dist && ls -lt 
      - run:
          name: Add github as known_host
          command: |
            if [[ ! -d ~/.ssh ]]; then
              mkdir ~/.ssh
            fi
            if [[ ! -f ~/.ssh/known_hosts ]]; then
              touch ~/.ssh/known_hosts
            fi
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Add git config
          command: git config --global user.email "ali9427@windowslive.com" && git config --global user.name "alanj1998"
      - run:
          name: Switch to master branch
          command: git checkout master
      # - run: 
      #     name: debugging
      #     command: ls -lt && cd dist && ls -lt 
      # - run:
      #     name: Merge without commit
      #     command: git merge --no-commit development
      # - run:
      #     name: Ignore all unecessary files
      #     command: |
      #       for file in *; do
      #         if [[ $file != "dist" && $file != "config" && $file != "package.json" ]]; then
      #           git reset $file
      #         fi
      #       done
      # - run: 
      #     name: debugging
      #     command: ls -lt && cd dist && ls -lt 
      - run:
          name: Add changes to commit
          command: git add dist && git add package.json && git add package-lock.json
      - run: 
          name: Commit fixed changes
          command: git commit -m "merged from dev"
      - run: 
          name: Push changes
          command: git push origin master
              
workflows:
  version: 2
  build_and_test_dev:
    jobs:
      - build
      - test:
          requires:
            - build
      - transpile:
          requires:
            - test
      - merge_to_master:
          requires:
            - transpile