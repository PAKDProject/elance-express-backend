{"version":3,"file":"errorHandler.js","sourceRoot":"","sources":["../../src/middleware/errorHandler.ts"],"names":[],"mappings":";;AACA,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAA;AAExC;;;;;;GAMG;AACQ,QAAA,YAAY,GAAG,CAAC,GAAU,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACtF,IAAI,WAAW,IAAI,YAAY,EAAE;QAC7B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;KACjC;SACI;QACD,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;KACrD;AACL,CAAC,CAAA","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nconst environment = process.env.NODE_ENV\n\n/**\n * Error handler which spits out error to the console. If environment is in development, the whole stack trace is shown.\n * @param err \n * @param req \n * @param res \n * @param next \n */\nexport let errorHandler = (err: Error, req: Request, res: Response, next: NextFunction) => {\n    if (environment == 'production') {\n        res.send(err.name).status(500)\n    }\n    else {\n        res.send(`${err.name} : ${err.stack}`).status(500)\n    }\n}"]}