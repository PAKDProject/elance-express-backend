{"version":3,"file":"registercontroller.spec.js","sourceRoot":"","sources":["../../../src/tests/controllers/registercontroller.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,iCAAwD;AACxD,6BAA4B;AAC5B,yDAA+C;AAC/C,sCAAsC;AAEtC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAElB,gBAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;IACjD,cAAM,CAAC,CAAM,IAAI,EAAC,EAAE;QAChB,IAAI,MAAM,GAAG,MAAM,IAAI,qBAAM,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;QACvD,MAAM,MAAM,CAAC,MAAM,EAAE,CAAA;QACrB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;QACpB,IAAI,EAAE,CAAA;IACV,CAAC,CAAA,CAAC,CAAA;IAEF,UAAE,CAAC,oEAAoE,CAAC,CAAA;IACxE,UAAE,CAAC,6DAA6D,CAAC,CAAA;AACrE,CAAC,CAAC,CAAA","sourcesContent":["import { describe, before, it, beforeEach } from \"mocha\"\nimport * as chai from 'chai'\nimport { Server } from '../../lib/createServer'\nimport chaiHttp = require('chai-http')\n\nchai.use(chaiHttp)\n\ndescribe('Testing the Registration Controller', () => {\n    before(async done => {\n        let server = await new Server(undefined, 'development')\n        await server.config()\n        await server.start()\n        done()\n    })\n\n    it('Should return a JWT when correct params are sent to POST /register')\n    it('Should return 400 if wrong params are passed to POST /login')\n})"]}