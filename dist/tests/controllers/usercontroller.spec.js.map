{"version":3,"file":"usercontroller.spec.js","sourceRoot":"","sources":["../../../src/tests/controllers/usercontroller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import \"mocha\"\nimport  * as chai  from 'chai'\nimport { Server } from '../../lib/createServer'\nimport { default as fetch } from 'node-fetch'\nimport chaiHttp = require('chai-http')\n\nchai.use(chaiHttp)\n\ndescribe('Testing the User Controller', () => {\n    const apiUrl = 'http://localhost:3000/user'\n    before(done => {\n        let app = new Server( undefined, 'development')\n        app.config().then(() => { \n            app.start()\n            done()\n        })\n    })\n\n    it('Should return all users', done => {\n        chai.request(apiUrl)\n        .get('')\n        .end((_err, res) => {\n            chai.expect(res).to.not.be.null\n            chai.expect(res.status).to.equal(200)\n            chai.expect(res).to.not.be.undefined\n            done()\n        })\n    })\n\n    it('Should insert a new user at /', done => {\n        const user = {\n            username: 'xXx_JeffBezos_xXx',\n            email: 'jeffmoneybezor@aws.com',\n            fName: 'Jeff',\n            lName: 'Bezos',\n            dob: new Date('01/01/01'),\n            summary: 'Ayy its ya boi, skinnybezos',\n            skills: [\n                {\n                    title: 'God King of Earth',\n                    description: 'I have too much money'\n                },\n                {\n                    title: 'Absolutely Shredded',\n                    description: 'gains gains gains'\n                }\n            ],\n            educationItems: [\n                {\n                    degreeTitle: 'PhD in Being Rich',\n                    startYear: '2017',\n                    endYear: '2999',\n                    collegeName: 'AWS Institute',\n                    grade: '69',\n                    description: 'Why is this a field loool 4Head'\n                }\n            ],\n            avatarUrl: 'bezos.png',\n            backoundUrl: 'background.png',\n            socialLinks: [\n                {\n                    name: 'Github',\n                    linkUrl: 'https://github.com/BlueishLeaf'\n                }\n            ],\n            tagline: 'The real OG'\n        }\n        chai.request(apiUrl)\n        .post('/')\n        .send(user)\n        .end((_err, res) => {\n            chai.expect(res.status).to.equal(201)\n            chai.expect(res.body).to.have.property('msg').eql('User created.')\n            done()\n        })\n    })\n\n    it('Should update user at /:id when ID is passed', done => {\n        const userChanges = {\n            fName: 'Money',\n            lName: 'Bags'\n        }\n        chai.request(apiUrl)\n        .put('/' + '5baab09a480dbc1757b7f010')\n        .send(userChanges)\n        .end((_err, res) => {\n            chai.expect(res.status).to.equal(202)\n            chai.expect(res.body).to.have.property('msg').eql('User updated.')\n            chai.expect(res.body.user).to.have.property('fName').eql('Money')\n            chai.expect(res.body.user).to.have.property('lName').eql('Bags')\n            done()\n        })\n    })\n    \n    it('Should return all relevant users at /search/:query is used')\n\n    it('Should delete the user at /:id when ID is passed')\n\n    after(() => {\n        process.exit(0)\n    })\n})"]}