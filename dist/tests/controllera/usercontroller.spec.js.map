{"version":3,"file":"usercontroller.spec.js","sourceRoot":"","sources":["../../../src/tests/controllera/usercontroller.spec.ts"],"names":[],"mappings":";;AAAA,iCAA4C;AAC5C,+BAA6B;AAC7B,yDAA+C;AAC/C,2CAA6C;AAE7C,gBAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACzC,MAAM,MAAM,GAAG,4BAA4B,CAAA;IAC3C,cAAM,CAAC,IAAI,CAAC,EAAE;QACV,IAAI,GAAG,GAAG,IAAI,qBAAM,CAAE,SAAS,EAAE,aAAa,CAAC,CAAA;QAC/C,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACnB,GAAG,CAAC,KAAK,EAAE,CAAA;YACX,IAAI,EAAE,CAAA;QACV,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IAEF,UAAE,CAAC,8CAA8C,EAAE,IAAI,CAAC,EAAE;QACtD,oBAAK,CAAC,MAAM,GAAG,EAAE,CAAC;aACjB,IAAI,CAAC,KAAK,CAAC,EAAE;YACV,aAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAA;YAC5B,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;YAClC,aAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAA;YACjC,IAAI,EAAE,CAAA;QACV,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IAEF,UAAE,CAAC,+BAA+B,CAAC,CAAA;IACnC,UAAE,CAAC,8CAA8C,CAAC,CAAA;IAClD,UAAE,CAAC,4DAA4D,CAAC,CAAA;IAEhE,KAAK,CAAC,GAAG,EAAE;QACP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import { describe, before, it } from \"mocha\"\nimport { expect } from 'chai'\nimport { Server } from '../../lib/createServer'\nimport { default as fetch } from 'node-fetch'\n\ndescribe('Testing the User Controller', () => {\n    const apiUrl = 'http://localhost:3000/user'\n    before(done => {\n        let app = new Server( undefined, 'development')\n        app.config().then(() => { \n            app.start()\n            done()\n        })\n    })\n\n    it('Should return user at /:id when id is passed', done => {\n        fetch(apiUrl + '')\n        .then(users => {\n            expect(users).to.not.be.null\n            expect(users.status).to.equal(200)\n            expect(users).to.not.be.undefined\n            done()\n        })\n    })\n\n    it('Should insert a new user at /')\n    it('Should update user at /:id when ID is passed')\n    it('Should return all relevant users at /search/:query is used')\n\n    after(() => {\n        process.exit(0)\n    })\n})"]}